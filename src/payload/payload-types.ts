/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

import { ReactNode } from "react";

export type CardSlider = {
  title?: string;
  textSub?: string;
  textHeading?: string;
  textContent?: string;
  textBackground?: string;
  slideImage: string | Media;
  slideColor?: ('blue' | 'red' | 'yellow' | 'gray' | 'dark-gray')[];
  caption?: string;
  id?: string;
}[];
export type LogoCloud1 = {
  title?: string;
  url?: string;
  logoImage: string | Media;
  caption?: string;
  id?: string;
}[];

export interface Config {
  collections: {
    pages: Page;
    post: Post;
    media: Media;
    users: User;
  };
  globals: {
    mainMenu: MainMenu;
  };
}
export interface Page {
  id: string;
  title: string;
  headline?: string;
  richText?: {
    [k: string]: unknown;
  }[];
  enableSubtitle?: boolean;
  subtitle?: string;
  onemore?: string;
  layout?: (ImageSlider | BlockTest | TextBlock | Contact | CtaBlock | LogoCloud)[];
  description?: string;
  keywords?: string;
  slug?: string;
  updatedAt: string;
  createdAt: string;
}
export interface ImageSlider {
  slider?: CardSlider;
  id?: string;
  blockName?: string;
  blockType: 'ImageSlider';
}
export interface Media {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes?: {
    thumbnail?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    sixteenByNineMedium?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
}
export interface BlockTest {
  blockheader: string;
  blocktext?: {
    [k: string]: unknown;
  }[];
  id?: string;
  blockName?: string;
  blockType: 'BlockTest';
}
export interface TextBlock {
  header: string;
  content?: {
    [k: string]: unknown;
  }[];
  displayMeta?: boolean;
  subtitle?: string;
  id?: string;
  blockName?: string;
  blockType: 'TextBlock';
}
export interface Contact {
  map_url: string;
  enableForm?: boolean;
  form_title?: string;
  id?: string;
  blockName?: string;
  blockType: 'Contact';
}
export interface CtaBlock {
  ctaImage: string | Media;
  headerStart: string;
  headerStyled: string;
  headerEnd: string;
  content?: {
    [k: string]: unknown;
  }[];
  displayButton?: boolean;
  buttonText?: string;
  buttonLink?: string;
  id?: string;
  blockName?: string;
  blockType: 'CallToAction';
}
export interface LogoCloud {
  headerStart: string;
  headerStyled: string;
  headerEnd: string;
  logos?: LogoCloud1;
  id?: string;
  blockName?: string;
  blockType: 'LogoCloud';
}
export interface Post {
  bodyContent1: any;
  excerpt: ReactNode;
  featuredImage: string | undefined;
  id: string;
  title?: string;
  slug?: string;
  updatedAt: string;
  createdAt: string;
}
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface MainMenu {
  id: string;
  items?: {
    type?: 'link' | 'subMenu';
    label: string;
    href?: string;
    id?: string;
  }[];
  updatedAt?: string;
  createdAt?: string;
}
